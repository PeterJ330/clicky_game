{"version":3,"sources":["components/Navbar.js","components/CharacterPics/CharacterPics.js","components/Wrapper/Wrapper.js","Game.js","App.js","index.js"],"names":["styles","card","margin","background","score","minHeight","lineHeight","fontSize","color","padding","textAlign","minWidth","float","begin","gameTitle","Navbar","react_default","a","createElement","style","Component","CharacterPics","props","onClick","characterSelect","id","className","alt","name","src","image","Wrapper","children","Game","state","characters","selected","count","console","log","_this","setState","concat","_this2","this","components_Wrapper_Wrapper","map","components_CharacterPics_CharacterPics","key","App","components_Navbar","src_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"0qEAGMA,EAAS,CACbC,KAAM,CACJC,OAAQ,GACRC,WAAY,WAEdC,MAAO,CACLD,WAAY,UACZE,UAAW,GACXC,WAAY,IACZC,SAAU,SACVC,MAAO,QACPC,QAAS,SACTC,UAAW,SACXC,SAAU,SACVC,MAAO,SAETC,MAAO,CACLV,WAAY,UACZE,UAAW,GACXC,WAAY,IACZC,SAAU,SACVC,MAAO,QACPC,QAAS,SACTC,UAAW,SACXC,SAAU,SACVC,MAAO,SAETE,UAAW,CACTX,WAAY,UACZE,UAAW,GACXC,WAAY,IACZC,SAAU,SACVC,MAAO,QACPC,QAAS,SACTC,UAAW,SACXC,SAAU,WA6BCI,mLAVX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAOnB,EAAOC,MACjBe,EAAAC,EAAAC,cAAA,OAAKC,MAAOnB,EAAOI,OAAnB,UAjBQ,EAiBR,iBAhBO,EAgBP,KACAY,EAAAC,EAAAC,cAAA,OAAKC,MAAOnB,EAAOa,OAAnB,4BACAG,EAAAC,EAAAC,cAAA,OAAKC,MAAOnB,EAAOc,WAAnB,uBANaM,aC9CNC,SANO,SAAAC,GAAK,OACvBN,EAAAC,EAAAC,cAAA,OACAK,QAAS,kBAAMD,EAAME,gBAAgBF,EAAMG,KAAKC,UAAU,SAC1DV,EAAAC,EAAAC,cAAA,OAAKS,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,WCDtBC,SAFC,SAAAT,GAAK,OAAIN,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WAAWJ,EAAMU,mBCuD1CC,6MA7CXC,MAAQ,CACJC,aACAC,UAAU,EACVC,MAAO,KAEXb,gBAAkB,WACdc,QAAQC,IAAIC,EAAKN,MAAME,WACK,IAAxBI,EAAKN,MAAME,UACXI,EAAKC,SAAS,iBAAO,CAAEJ,MAAOG,EAAKN,MAAMG,MAAQ,KACjDG,EAAKC,SAAS,SAAAP,GAAK,MAAK,CAAEE,UAAWF,EAAME,cAEd,IAAxBI,EAAKN,MAAME,UAChBI,EAAKC,SAAS,iBAAO,CAAEJ,MAAOG,EAAKN,MAAMG,MAAQ,KAGrDC,QAAQC,IAAIC,EAAKN,MAAMG,OACvBC,QAAQC,IAAR,cAAAG,OAA0BF,EAAKN,MAAME,oFAUhC,IAAAO,EAAAC,KACL,OACI5B,EAAAC,EAAAC,cAAC2B,EAAD,KACKD,KAAKV,MAAMC,WAAWW,IAAI,SAAAX,GAAU,OACjCnB,EAAAC,EAAAC,cAAC6B,EAAD,CAEIvB,gBAAiBmB,EAAKnB,gBACtBC,GAAIU,EAAWV,GACfuB,IAAKb,EAAWV,GAChBK,MAAOK,EAAWL,MAClBM,SAAUD,EAAWC,qBAzC1BhB,aCEJ6B,EANH,kBACRjC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACiC,EAAD,cCFRC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.76d9dfa2.chunk.js","sourcesContent":["// import React from \"react\";\nimport React, { Component } from \"react\";\n\nconst styles = {\n  card: {\n    margin: 20,\n    background: \"#e8eaf6\"\n  },\n  score: {\n    background: \"#9a74db\",\n    minHeight: 50,\n    lineHeight: 3.5,\n    fontSize: \"1.2rem\",\n    color: \"white\",\n    padding: \"0 20px\",\n    textAlign: \"center\",\n    minWidth: \"33.33%\",\n    float: \"right\"\n  },\n  begin: {\n    background: \"#9a74db\",\n    minHeight: 50,\n    lineHeight: 3.5,\n    fontSize: \"1.2rem\",\n    color: \"white\",\n    padding: \"0 20px\",\n    textAlign: \"center\",\n    minWidth: \"33.33%\",\n    float: \"right\"\n  },\n  gameTitle: {\n    background: \"#9a74db\",\n    minHeight: 50,\n    lineHeight: 3.5,\n    fontSize: \"1.2rem\",\n    color: \"white\",\n    padding: \"0 20px\",\n    textAlign: \"center\",\n    minWidth: \"33.33%\",\n  }\n};\n\nvar userScore = 1;\nvar topScore = 1;\n\n// const Navbar = () => (\n//   <div style={styles.card}>\n//     <div style={styles.score}>Score: {userScore} | Top Score: {topScore} </div>\n//     <div style={styles.begin}>Click an image to begin!</div>\n//     <div style={styles.gameTitle}>Clicky Game</div>\n//   </div>\n// );\n\n// export default Navbar;\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div style={styles.card}>\n        <div style={styles.score}>Score: {userScore} | Top Score: {topScore} </div>\n        <div style={styles.begin}>Click an image to begin!</div>\n        <div style={styles.gameTitle}>Clicky Game</div>\n      </div>\n\n    )\n  }\n}\nexport default Navbar;\n\n\n","import React from \"react\";\nimport \"./CharacterPics.css\";\n\nconst CharacterPics = props => (\n    <div \n    onClick={() => props.characterSelect(props.id)} className=\"image\">\n    <img alt={props.name} src={props.image}/>\n    </div>\n);\nexport default CharacterPics;\n\n// const CharacterPics = props => (\n//     <div \n//     onClick={() => this.characterSelect()} \n//     className=\"image\">\n//     <img alt={props.name} src={props.image}/>\n//     </div>\n// );\n// export default CharacterPics;\n\n// const CharacterPics = props => (\n//     <div className=\"image\">\n//     <img alt={props.name} src={props.image}/>\n//     </div>\n// );\n// export default CharacterPics;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React, { Component } from \"react\";\n// import React from \"react\";\n// import Navbar from \"./components/Navbar\";\nimport CharacterPics from \"./components/CharacterPics\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\n\n\nclass Game extends Component {\n\n    // class Game extends React.Component {\n    // Setting this.state.characters to the characters json array\n\n    state = {\n        characters,\n        selected: false,\n        count: 0\n    };\n    characterSelect = () => {\n        console.log(this.state.selected);\n        if (this.state.selected === false) {\n            this.setState(() => ({ count: this.state.count + 1 }));\n            this.setState(state => ({ selected: !state.selected }));\n        }\n        else if (this.state.selected === true) {\n            this.setState(() => ({ count: this.state.count + 1 }));\n        }\n\n        console.log(this.state.count);\n        console.log(`State is = ${this.state.selected}`);\n    };\n    // characterSelect = () => {\n    //     // console.log(this.state.selected);\n    //     this.setState(state => ({ selected: !state.selected }));\n    //     console.log(this.state.selected);\n    // };\n\n\n    // Map over this.state.characters and render a CharacterPics component for each character object\n    render() {\n        return (\n            <Wrapper>\n                {this.state.characters.map(characters => (\n                    <CharacterPics\n                        // <CharacterPics onClick={() => this.characterSelect()}\n                        characterSelect={this.characterSelect}\n                        id={characters.id}\n                        key={characters.id}\n                        image={characters.image}\n                        selected={characters.selected}\n                    />\n                ))}\n            </Wrapper>\n\n        );\n    }\n}\n\nexport default Game;\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Game from \"./Game\";\n\nconst App = () => (\n    <div>\n        <Navbar />\n        <Game />\n    </div>\n)\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}